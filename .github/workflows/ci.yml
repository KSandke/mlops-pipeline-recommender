name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r Recommender/requirements.txt
        pip install -r Recommender/requirements-dev.txt
    - name: Lint with ruff
      run: ruff check --output-format github .
    - name: Test with pytest
      run: pytest

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v3

    - name: Lowercase repository owner
      id: owner_string
      uses: ASzc/change-string-case-action@v5
      with:
        string: ${{ github.repository_owner }}

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      id: build-image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ghcr.io/${{ steps.owner_string.outputs.lowercase }}/${{ github.event.repository.name }}:${{ github.sha }}
        labels: |
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          org.opencontainers.image.revision=${{ github.sha }}

  deploy-to-ecs:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # TODO: Change to your AWS region

      - name: Download ECS task definition
        id: task-def
        run: |
          aws ecs describe-task-definition --task-definition your-task-definition-family --query taskDefinition > task-definition.json
          echo "task-definition-path=$(pwd)/task-definition.json" >> $GITHUB_OUTPUT
        # TODO: Replace 'your-task-definition-family' with your actual ECS task definition family name

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: fill-image
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition-path }}
          container-name: your-container-name # TODO: Change to the name of the container in your task definition
          image: ghcr.io/${{ env.OWNER }}/${{ env.REPO }}:${{ github.sha }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.fill-image.outputs.task-definition }}
          service: your-ecs-service-name # TODO: Change to your ECS service name
          cluster: your-ecs-cluster-name # TODO: Change to your ECS cluster name
          wait-for-service-stability: true